buildscript {
    ext {
        kotlinVersion = "1.3.50"
        joobyVersion = "2.1.0"
    }

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "com.google.gradle:osdetector-gradle-plugin:1.4.0"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "io.jooby:jooby-gradle-plugin:$joobyVersion"
        classpath "com.github.jengelman.gradle.plugins:shadow:5.1.0"
    }
}

apply plugin: "io.spring.dependency-management"
apply plugin: "com.google.osdetector"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"
apply plugin: "kotlin"
apply plugin: "jooby"
apply plugin: 'idea'

mainClassName = "io.oreto.burger.AppKt"
sourceCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "io.jooby:jooby-bom:$joobyVersion"
    }
}

dependencies {
    compile "io.jooby:jooby-utow"
    compile "io.jooby:jooby-pebble"
    compile "io.jooby:jooby-jackson"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin"
    compile "ch.qos.logback:logback-classic"

    compile "org.apache.commons:commons-lang3:3.9"

    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "org.junit.jupiter:junit-jupiter-engine"
    testCompile "io.jooby:jooby-test"
    testCompile "com.squareup.okhttp3:okhttp"
}

test {
    useJUnitPlatform()
}

/** Kotlin debug information: */
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.javaParameters = true
}

shadowJar {
    mergeServiceFiles()
}

joobyRun {
    mainClass = "${mainClassName}"
    restartExtensions = ["conf", "properties", "class"]
    compileExtensions =  ["java", "kt", "js", "css"]
    port = 8080
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
